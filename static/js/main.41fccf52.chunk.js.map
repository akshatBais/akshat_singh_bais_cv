{"version":3,"sources":["components/Header/Header.tsx","components/MainComponent/MainComponent.tsx","components/WorkExperienceComponent/work-exp.js","components/WorkExperienceComponent/WorkExperience.tsx","components/ToDoComponent/ToDoComponent.tsx","components/ProjectsComponent/ProjectsComponent.tsx","App.tsx","serviceWorker.ts","index.tsx","../node_modules/require-context sync","images/asb.jpg"],"names":["Header","classes","makeStyles","root","background","boxShadow","toolBarProps","justifyContent","useStyles","AppBar","position","Toolbar","id","href","MainComponent","console","log","axios","get","then","res","blob","Blob","body","download","className","src","require","alt","Button","onClick","this","downloadCv","React","workExperience","WorkExperience","props","state","setState","Box","display","flexWrap","bgcolor","Component","ToDoComponent","handleCheckBoxClick","event","list","checked","parseInt","target","todoitems","done","isButtonClicked","handleButtonClick","bind","data","map","item","status","hidden","placeholder","value","index","key","Checkbox","onChange","task","CircularProgress","ProjectsComponent","isDialogVisible","handleClickOpen","handleDialogClose","variant","color","Dialog","open","onClose","aria-labelledby","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.41fccf52.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './Header.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\nfunction Header() {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      background: 'white',\r\n      boxShadow: 'none'\r\n    },\r\n    toolBarProps: {\r\n      justifyContent: 'center'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" classes={{ root: classes.root }}>\r\n      <Toolbar classes={{ root: classes.toolBarProps }}>\r\n        <ul id=\"navigation-menu\">\r\n          <li><a href=\"#\">Home</a></li>\r\n          <li><a href=\"#experience\"> Work Experience</a></li>\r\n          <li><a href=\"#projects\"> Projects</a></li>\r\n          <li><a href=\"#projects\"> Contact</a></li>\r\n        </ul>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Header;","import * as React from 'react';\r\nimport \"../MainComponent/MainComponent.css\"\r\nimport { Button } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nconst baseUrl = \"./skills-images/\";\r\n\r\nclass MainComponent extends React.Component {\r\n\r\n    componentWillMount() {\r\n        \r\n    }\r\n\r\n    downloadCv() {\r\n        console.log(\"downloading cv\");\r\n        axios.get(\"https://akshat-profile-node.herokuapp.com/download/akshatcv\").then((res: any) => {\r\n            const blob = new Blob([res.body])\r\n            download(blob, 'akshat_bais_cv.pdf');\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"parent-column\" id=\"#\">\r\n                {/* <div className=\"column1\">\r\n                    Primary Skills\r\n                    <ul>\r\n                        <li>\r\n                            <img src={require(baseUrl + \"angular.svg\")} />\r\n                        </li>\r\n                        <li><img src={require(baseUrl + \"nodejs.png\")} /></li>\r\n                        <li><img src={require(baseUrl + \"java.jpg\")} /></li>\r\n                        <li><img src={require(baseUrl + \"js.svg\")} /></li>\r\n                        <li><img src={require(baseUrl + \"docker.png\")} /></li>\r\n                    </ul>\r\n                </div> */}\r\n                <div  className=\"main-component\">\r\n                    <div className=\"profile-summary\">\r\n                        <img className=\"profile-picture\" src={require(\"../../images/asb.jpg\")} alt=\"\" />\r\n                        <h3  className=\"body\">Hey !!<br></br> This is Akshat Singh Bais</h3>\r\n                        <h4 className=\"body\"> &#60; Full Stack Engineer /></h4>\r\n                        <div className=\"body\">Technology Enthusiast.\r\n                      Demonstrated hand-on with several technologies both on front-end and back-end side. Love coding, developing logics and algorithms.\r\n                      Apart from development I enjoy reading books.You can scroll down to know more about me or download my CV.\r\n                      </div>\r\n                        <div className=\"download-cv\">\r\n                            <Button onClick={this.downloadCv}><GetAppIcon /> Download CV</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"column2\">\r\n                    asdasd\r\n                </div> */}\r\n                {/* <div className=\"column3\">\r\n                    Secondary Skils\r\n                    <ul>\r\n                        <li><img src={require(baseUrl + \"react.png\")} /></li>\r\n                    </ul>\r\n                </div> */}\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainComponent;","const workExperience = {\r\n    \"companies\": [\r\n        {\r\n            \"companyName\": \"Tata Consultancy Service\",\r\n            \"projects\": [\r\n                {\r\n                    \"ProjectName\": \"Covenant Monitoring Engine\",\r\n                    \"projectDescription\": \"\"\r\n                },\r\n                {\r\n                    \"project\" : \"\",\r\n                    \"projectDescription\" : \"\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"companyName\": \"Tata Consultancy Service\",\r\n            \"projects\": [\r\n                {\r\n                    \"projectName\" : \"Enterprise Single Sign On\",\r\n                    \"projectDescription\" : \"\"\r\n                },\r\n                {\r\n                    \"project\" : \"\",\r\n                    \"projectDescription\" : \"\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n\r\n}\r\n\r\nexport default workExperience;","import React from 'react';\r\nimport workExperience from './work-exp';\r\nimport './WorkExperience.css'\r\nimport { CircularProgress, Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nclass WorkExperience extends React.Component {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState(workExperience);\r\n        console.log(this.state)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var companies = [];\r\n        // companies = this.state.companies;\r\n\r\n        return (\r\n            <section id=\"experience\" className=\"experience\">\r\n                <Box display=\"flex\" flexWrap=\"wrap\" bgcolor=\"backgroumd.paper\" justifyContent = \"space-between\">\r\n                    <Box>\r\n                        ssssssssssssssssssssssssssssssssssssssssssssssssss\r\n                    </Box>\r\n                    <Box>\r\n                        aaasdasdds\r\n                    </Box>\r\n                </Box>\r\n                {/* <div>                        \r\n<CircularProgress />\r\n                        <br />\r\n                        Under construction\r\n                    </div> */}\r\n            </section>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WorkExperience;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Checkbox, Button, CircularProgress } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport '../ToDoComponent/ToDoComponent.css';\r\n\r\ninterface todoItems {\r\n    todoitems: [],\r\n    done: boolean,\r\n    checked: boolean[],\r\n    isButtonClicked: boolean\r\n}\r\n\r\nclass ToDoComponent extends React.Component<{}, todoItems> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            todoitems: [],\r\n            done: false,\r\n            checked: [],\r\n            isButtonClicked: true\r\n        };\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleCheckBoxClick = this.handleCheckBoxClick.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"will mount\");\r\n        console.log(this.state)\r\n        axios.get(\"https://akshat-profile-node.herokuapp.com/data/toDoDetails\").then((res: any) => {\r\n            this.setState({\r\n                todoitems: res.data[0].todoitems, done: true, checked: res.data[0].todoitems.map((item: any) => {\r\n                    if (item.status == 0) return false; else return true;\r\n                })\r\n            });\r\n            // console.log(this.state);\r\n            console.log(\"compoennt will mount\");\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleCheckBoxClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        console.log(\"handle check is called\");\r\n        let list = this.state.checked;\r\n        if (this.state.checked[parseInt(event.target.id)]) {\r\n            list[parseInt(event.target.id)] = false;\r\n            console.log(\"setting false\")\r\n        } else {\r\n            list[parseInt(event.target.id)] = true;\r\n            console.log(\"setting true\")\r\n        }\r\n        this.setState({ checked: list });\r\n\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log(\"component will update\");\r\n        // console.log(this.state)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"component did update\");\r\n    }\r\n\r\n    handleButtonClick() {\r\n        this.setState({ isButtonClicked: false });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"inside render\");\r\n        if (!this.state.done) {\r\n            return (\r\n                <div>\r\n                   <CircularProgress />\r\n                </div>\r\n            )\r\n        } else {\r\n            // console.log(this.state)\r\n            return (\r\n\r\n                // <section id=\"todolist\">\r\n                <div className=\"to-do-section\">\r\n                    <div hidden= {!this.state.isButtonClicked} className='button-section'>\r\n                        <Button onClick={this.handleButtonClick}><AddCircleIcon></AddCircleIcon> Create a Task</Button>\r\n                    </div>\r\n                    <div hidden={this.state.isButtonClicked} className='add-task-box'>\r\n                        <textarea placeholder=\"Add a Task\"></textarea>\r\n                    </div>\r\n                    <div className='to-do-list'>\r\n                        <ul>\r\n                            {this.state.todoitems.map((value: any, index: any) => {\r\n                                return <li key={index}>\r\n                                    <Checkbox id={`${index}`} checked={this.state.checked[index] ? true : false}\r\n                                        onChange={this.handleCheckBoxClick}></Checkbox>\r\n                                    {value.task}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n                // </section>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ToDoComponent;\r\n\r\n","import React from 'react';\r\nimport '../ProjectsComponent/ProjectsComponent.css'\r\nimport ToDoComponent from '../ToDoComponent/ToDoComponent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\ninterface stateInterface {\r\n    isDialogVisible: boolean\r\n}\r\n// var hello : Number;\r\nclass ProjectsComponent extends React.Component<{}, stateInterface> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isDialogVisible: false\r\n        }\r\n        // hello = \"hey\";\r\n\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleDialogClose = this.handleDialogClose.bind(this);\r\n    }\r\n\r\n    handleClickOpen() {\r\n        this.setState({ isDialogVisible: true });\r\n    }\r\n\r\n    handleDialogClose() {\r\n        this.setState({ isDialogVisible: false });\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <section id=\"projects\">\r\n                <div className=\"projects-section\">\r\n                    In Progress\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>TO DO APP</Button>\r\n                    <Dialog open={this.state.isDialogVisible} onClose={this.handleDialogClose} aria-labelledby=\"simple-dialog-title\">\r\n                        <ToDoComponent />\r\n                    </Dialog>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProjectsComponent;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport MainComponent from './components/MainComponent/MainComponent';\r\nimport SkillsComponent from './components/SkillsComponent/SkillsComponent';\r\nimport WorkExperience from './components/WorkExperienceComponent/WorkExperience';\r\nimport ProjectsComponent from './components/ProjectsComponent/ProjectsComponent';\r\nimport ToDoComponent from './components/ToDoComponent/ToDoComponent';\r\nrequire('require-context/register');\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <Header />\r\n      <div className=\"profile-body\">\r\n        <MainComponent />\r\n        {/* <SkillsComponent /> */}\r\n        <WorkExperience />\r\n        <ProjectsComponent />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 49;","module.exports = __webpack_public_path__ + \"static/media/asb.d63ad553.jpg\";"],"sourceRoot":""}