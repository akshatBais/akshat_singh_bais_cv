{"version":3,"sources":["images/asb.jpg","components/Header/Header.tsx","components/MainComponent/MainComponent.tsx","components/WorkExperienceComponent/work-exp.js","components/WorkExperienceComponent/WorkExperience.tsx","components/ToDoComponent/ToDoComponent.tsx","components/ProjectsComponent/ProjectsComponent.tsx","components/ContactComponent/ContactComponent.tsx","App.tsx","serviceWorker.ts","index.tsx","../node_modules/require-context sync"],"names":["module","exports","Header","React","open","setOpen","classes","makeStyles","theme","createStyles","root","background","boxShadow","breakpoints","down","height","toolBarProps","minHeight","justifyContent","sectionDesktop","display","up","sectionMobile","color","menuButtonProps","drawer","width","flexShrink","drawerPaper","dwarerItems","marginTop","useStyles","handleDrawerClose","AppBar","position","className","Toolbar","id","href","IconButton","aria-label","onClick","Drawer","variant","anchor","paper","ModalProps","onBackdropClick","Divider","List","MainComponent","props","state","loading","downloadCv","bind","console","log","this","setState","axios","method","responseType","then","res","blob","Blob","data","type","download","src","require","alt","Button","workExperience","WorkExperience","Component","ToDoComponent","handleCheckBoxClick","event","list","checked","parseInt","target","todoitems","done","isButtonClicked","handleButtonClick","get","map","item","status","hidden","placeholder","value","index","key","Checkbox","onChange","task","CircularProgress","ProjectsComponent","minWidth","isDialogVisible","handleClickOpen","handleDialogClose","Dialog","onClose","aria-labelledby","ContactComponent","name","contactNumber","InstitutionName","haandleFormSubmit","handleInput","e","currentTarget","onSubmit","title","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.737e21f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/asb.d63ad553.jpg\";","import * as React from 'react';\r\nimport './Header.css';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { IconButton, Typography, Drawer, ListItem, List, Divider } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction Header() {\r\n  const drawerWidth = 240;\r\n  const [open, setOpen] = React.useState(false);\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        background: 'white',\r\n        boxShadow: 'none',\r\n        [theme.breakpoints.down('sm')]: {\r\n          height: '5vh',\r\n        },\r\n      },\r\n      toolBarProps: {\r\n        minHeight: '50px',\r\n        justifyContent: 'center'\r\n      },\r\n      sectionDesktop: {\r\n        display: 'none',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'flex',\r\n        }\r\n      },\r\n      sectionMobile: {\r\n        color: 'black',\r\n        height: '50px',\r\n        [theme.breakpoints.down('sm')]: {\r\n          display: 'flex',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'none',\r\n        }\r\n      },\r\n      menuButtonProps: {\r\n        // minHeight: '50px',\r\n        color: 'blue'\r\n      },\r\n      drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n        }\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth\r\n      },\r\n      dwarerItems: {\r\n        marginTop: '50px'\r\n      }\r\n    })\r\n  );\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    // <div>\r\n    <AppBar position=\"sticky\" classes={{ root: classes.root }}>\r\n      <div className={classes.sectionDesktop} >\r\n        <Toolbar classes={{ root: classes.toolBarProps }}>\r\n          <ul id=\"navigation-menu\">\r\n            <li><a href=\"#\">Home</a></li>\r\n            <li><a href=\"#experience\"> Work Experience</a></li>\r\n            <li><a href=\"#projects\"> Projects</a></li>\r\n            <li><a href=\"#contact\"> Contact</a></li>\r\n          </ul>\r\n        </Toolbar>\r\n      </div>\r\n      <div className={classes.sectionMobile}>\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen}>\r\n            <MenuIcon classes={{root: classes.menuButtonProps}}/>\r\n          </IconButton>\r\n          {/* <Typography>\r\n              Please help yourself through drawer to navigate\r\n          </Typography> */}\r\n        </Toolbar>\r\n      </div>\r\n      <Drawer variant=\"temporary\" anchor='left' open={open} className={classes.drawer} classes={{\r\n        paper: classes.drawerPaper,\r\n      }} ModalProps={{ onBackdropClick: handleDrawerClose }}>\r\n        <div className=\"drawer-items\">\r\n          <div>\r\n            Hello ! Again !\r\n          </div>\r\n          <div className={classes.dwarerItems}>\r\n            <Divider />\r\n            <List><a href=\"#\" onClick={handleDrawerClose}>Home</a></List>\r\n            <Divider />\r\n            <List><a href=\"#experience\" onClick={handleDrawerClose}> Work Experience</a></List>\r\n            <Divider />\r\n            <List><a href=\"#contact\" onClick={handleDrawerClose}>Contact</a></List>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n\r\n    </AppBar >\r\n\r\n\r\n\r\n  );\r\n}\r\nexport default Header;","import * as React from 'react';\r\nimport \"../MainComponent/MainComponent.css\"\r\nimport { Button } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\n// const baseUrl = \"./skills-images/\";\r\n\r\ninterface MainInterface {\r\n    loading: boolean\r\n}\r\n\r\nclass MainComponent extends React.Component<{}, MainInterface> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n        this.downloadCv = this.downloadCv.bind(this);\r\n    }\r\n\r\n\r\n    downloadCv() {\r\n        console.log(\"downloading cv\");\r\n        this.setState({ loading: true });\r\n        axios(\"https://akshat-profile-node.herokuapp.com/download/akshatcv\", {\r\n            method: 'GET',\r\n            responseType: 'blob'\r\n        }).then((res: any) => {\r\n            this.setState({ loading: false });\r\n            const blob = new Blob([res.data], { type: \"application/pdf\" })\r\n            download(blob, 'akshat_bais_cv.pdf');\r\n            // const fileURL = URL.createObjectURL(blob);\r\n            //Open the URL on new Window\r\n            // window.open(fileURL);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"#\">\r\n                <div className=\"parent-column\">\r\n\r\n                    <div className=\"main-component\">\r\n                        <div className=\"profile-summary\">\r\n                            <img className=\"profile-picture\" src={require(\"../../images/asb.jpg\")} alt=\"\" />\r\n                            <h3 className=\"body\">Hey !!<br></br> This is Akshat Singh Bais</h3>\r\n                            <h4 className=\"body\"> &#60; Full Stack Engineer /></h4>\r\n                            <div className=\"body\">Technology Enthusiast.\r\n                          Demonstrated hand-on with several technologies both on front-end and back-end side. Love coding, developing logics and algorithms.\r\n                          Apart from development I enjoy reading books.You can scroll down to know more about me or download my CV.\r\n                      </div>\r\n                            <div className=\"download-cv\">\r\n                                <Button onClick={this.downloadCv}>\r\n                                    <GetAppIcon />\r\n                                    {(this.state.loading) ? 'Downloading...' : ' Download CV'}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"column2\">\r\n                    asdasd\r\n                </div> */}\r\n                    {/* <div className=\"column3\">\r\n                    Secondary Skils\r\n                    <ul>\r\n                        <li><img src={require(baseUrl + \"react.png\")} /></li>\r\n                    </ul>\r\n                </div> */}\r\n\r\n                </div >\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainComponent;","const workExperience = {\r\n    \"companies\": [\r\n        {\r\n            \"companyName\": \"Tata Consultancy Service\",\r\n            \"projects\": [\r\n                {\r\n                    \"ProjectName\": \"Covenant Monitoring Engine\",\r\n                    \"projectDescription\": \"\"\r\n                },\r\n                {\r\n                    \"project\" : \"\",\r\n                    \"projectDescription\" : \"\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"companyName\": \"Tata Consultancy Service\",\r\n            \"projects\": [\r\n                {\r\n                    \"projectName\" : \"Enterprise Single Sign On\",\r\n                    \"projectDescription\" : \"\"\r\n                },\r\n                {\r\n                    \"project\" : \"\",\r\n                    \"projectDescription\" : \"\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n\r\n}\r\n\r\nexport default workExperience;","import React from 'react';\r\nimport workExperience from './work-exp';\r\nimport './WorkExperience.css'\r\nimport { CircularProgress, Box, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\ninterface WorkExperienceInterface {\r\n    workExperience: Object\r\n}\r\n\r\n\r\nclass WorkExperience extends React.Component<{}, WorkExperienceInterface> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            workExperience: {}\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({ workExperience: workExperience });\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.state.workExperience);\r\n        return (\r\n\r\n            <section id=\"experience\" className=\"experience\">\r\n                <Divider />\r\n                <div className=\"experience-start\">\r\n                    <div className=\"experience-items\">\r\n                    <div className=\"company-data\"><div className=\"company-logo\">Logo </div><div className=\"company-name\"><b><h3>Viacom18</h3></b></div></div>\r\n                            <div><span><i>From : Jan, 2019 - To : Dec, 2019</i></span></div>\r\n                            <ul>\r\n                                <li>Developed <b>Search Engine</b> using node and mongo capable of searching partial and full text</li>\r\n                                <li>Enterprise Single Sign On : Authenticating Viacom18 users using ldap and passport on node.</li>\r\n                                <li>Developed a generic pop-up module using Angular 7</li>\r\n                            </ul>\r\n                        {/* </div> */}\r\n                    </div>\r\n\r\n                    <div className=\"experience-items\">\r\n                        <div className=\"company-data\"><div className=\"company-logo\">Logo </div><div className=\"company-name\"><b><h3>Tata Consultancy Services</h3></b></div></div>\r\n                        <div><span><i>From September 2016 - To : Jan, 2019</i></span></div>\r\n                        <ul>\r\n                            <li>sddasdadadadasdjh khdkajdhaksjdh akdjhask jdhaskd sajdklajd lkdjlkasjd alskdjasl kdj\r\n                            dkajdlkasjdlas kdjla asd laskjd asl </li>\r\n                            <li>sddasdadadadasdjh khdkajdhaksjdh akdjhask jdhaskd sajdklajd lkdjlkasjd alskdjasl kdj\r\n                            dkajdlkasjdlas kdjla asd laskjd asl </li>\r\n                            <li>sddasdadadadasdjh khdkajdhaksjdh akdjhask jdhaskd sajdklajd lkdjlkasjd alskdjasl kdj\r\n                            dkajdlkasjdlas kdjla asd laskjd asl </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkExperience;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Checkbox, Button, CircularProgress } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport '../ToDoComponent/ToDoComponent.css';\r\n\r\ninterface todoItems {\r\n    todoitems: [],\r\n    done: boolean,\r\n    checked: boolean[],\r\n    isButtonClicked: boolean\r\n}\r\n\r\nclass ToDoComponent extends React.Component<{}, todoItems> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            todoitems: [],\r\n            done: false,\r\n            checked: [],\r\n            isButtonClicked: true\r\n        };\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleCheckBoxClick = this.handleCheckBoxClick.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"will mount\");\r\n        console.log(this.state)\r\n        axios.get(\"https://akshat-profile-node.herokuapp.com/data/toDoDetails\").then((res: any) => {\r\n            this.setState({\r\n                todoitems: res.data[0].todoitems, done: true, checked: res.data[0].todoitems.map((item: any) => {\r\n                    if (item.status == 0) return false; else return true;\r\n                })\r\n            });\r\n            console.log(\"compoennt will mount\");\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleCheckBoxClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        console.log(\"handle check is called\");\r\n        let list = this.state.checked;\r\n        if (this.state.checked[parseInt(event.target.id)]) {\r\n            list[parseInt(event.target.id)] = false;\r\n            console.log(\"setting false\")\r\n        } else {\r\n            list[parseInt(event.target.id)] = true;\r\n            console.log(\"setting true\")\r\n        }\r\n        this.setState({ checked: list });\r\n\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log(\"component will update\");\r\n        // console.log(this.state)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"component did update\");\r\n    }\r\n\r\n    handleButtonClick() {\r\n        this.setState({ isButtonClicked: false });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"inside render\");\r\n        if (!this.state.done) {\r\n            return (\r\n                // <div>\r\n                <CircularProgress />\r\n            )\r\n        } else {\r\n            return (\r\n\r\n                <div className=\"to-do-section\">\r\n                    <div hidden={!this.state.isButtonClicked} className='button-section'>\r\n                        <Button onClick={this.handleButtonClick}><AddCircleIcon></AddCircleIcon> Create a Task</Button>\r\n                    </div>\r\n                    <div hidden={this.state.isButtonClicked} className='add-task-box'>\r\n                        <textarea placeholder=\"Add a Task\"></textarea>\r\n                    </div>\r\n                    <div className='to-do-list'>\r\n                        <ul>\r\n                            {this.state.todoitems.map((value: any, index: any) => {\r\n                                return <li key={index}>\r\n                                    <Checkbox id={`${index}`} checked={this.state.checked[index] ? true : false}\r\n                                        onChange={this.handleCheckBoxClick}></Checkbox>\r\n                                    {value.task}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n                // </section>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ToDoComponent;\r\n\r\n","import React from 'react';\r\nimport '../ProjectsComponent/ProjectsComponent.css'\r\nimport ToDoComponent from '../ToDoComponent/ToDoComponent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\ninterface stateInterface {\r\n    isDialogVisible: boolean\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: '300px'\r\n    }\r\n});\r\n\r\n\r\nclass ProjectsComponent extends React.Component<{}, stateInterface> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isDialogVisible: false\r\n        }\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleDialogClose = this.handleDialogClose.bind(this);\r\n    }\r\n\r\n    handleClickOpen() {\r\n        this.setState({ isDialogVisible: true });\r\n    }\r\n\r\n    handleDialogClose() {\r\n        this.setState({ isDialogVisible: false });\r\n    }\r\n\r\n\r\n    render() {\r\n        // const classes = useStyles();\r\n        return (\r\n            <section id=\"projects\">\r\n                <div className=\"projects-section\">\r\n                    In Progress\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>TO DO APP</Button>\r\n                    <Dialog open={this.state.isDialogVisible} onClose={this.handleDialogClose} aria-labelledby=\"simple-dialog-title\">\r\n                    {/* <div draggable={true} className=\"to-do-app\"> */}\r\n                        <ToDoComponent />\r\n                    {/* </div> */}\r\n                    </Dialog>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProjectsComponent;","import React from 'react';\r\nimport '../ContactComponent/ContactComponent.css'\r\nimport { Divider } from '@material-ui/core';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\ninterface ContactInformation {\r\n    name: string,\r\n    contactNumber: number,\r\n    InstitutionName: string\r\n}\r\n\r\nclass ContactComponent extends React.Component<{}, ContactInformation> {\r\n\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            name: \"\",\r\n            contactNumber: 0,\r\n            InstitutionName: \"\",\r\n\r\n\r\n        }\r\n\r\n        this.haandleFormSubmit = this.haandleFormSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n    }\r\n\r\n    haandleFormSubmit() {\r\n    }\r\n\r\n    handleInput(e: React.FormEvent<HTMLInputElement>) {\r\n        let name = e.currentTarget.name;\r\n        let value = e.currentTarget.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: value\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n\r\n            <section className=\"contact\" id=\"contact\">\r\n                <Divider />\r\n                <div className=\"contact-information\">\r\n                    <div className=\"message\">\r\n                        <p><i>If you like my profile and think my skills can be leveraged for your project and requirements.\r\n                        Kindly fill your information and leave a message. Thanks !!</i></p>\r\n                    </div>\r\n                    <div className=\"message\">\r\n                        <p>PS : You can still leave a message along with your details if you want to get in touch\r\n                             regarding your personal projects or any sort of help. Happy development guys !\r\n                    </p>\r\n                    </div>\r\n\r\n                    <form className=\"form-details\" onSubmit={this.haandleFormSubmit} >\r\n                        <div className=\"form-control\">\r\n                            <input title={\"Full Name\"} name={\"name\"} value={this.state.name} placeholder={\"Please Enter Your Name\"} onChange={this.handleInput} />\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <CallIcon />\r\n                            <input type=\"number\" name={\"contactNumber\"} value={this.state.contactNumber == 0 ? \"\" : this.state.contactNumber} placeholder={\"Please Enter Your Contact number\"} onChange={this.handleInput} />\r\n                        </div>\r\n                        <div className=\"form-control-textarea\">\r\n                            <textarea placeholder={\"Leave a message\"}></textarea>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </section>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ContactComponent;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport MainComponent from './components/MainComponent/MainComponent';\nimport SkillsComponent from './components/SkillsComponent/SkillsComponent';\nimport WorkExperience from './components/WorkExperienceComponent/WorkExperience';\nimport ProjectsComponent from './components/ProjectsComponent/ProjectsComponent';\nimport ToDoComponent from './components/ToDoComponent/ToDoComponent';\nimport { Divider } from '@material-ui/core';\nimport ContactComponent from './components/ContactComponent/ContactComponent';\nrequire('require-context/register');\n\nconst App: React.FC = () => {\n  return (\n      <div className=\"profile\">\n        <Header />\n      <div className=\"profile-body\">\n        <MainComponent />\n        {/* <SkillsComponent /> */}\n        <Divider />\n        <WorkExperience />\n        <Divider />\n        <ProjectsComponent />\n        <Divider />\n        <ContactComponent />\n      </div>\n    </div >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 52;"],"sourceRoot":""}